/**
 * Argus Law Firm - Litigation Financing Page Script (–ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
 * –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º –∏ –≤—Å–µ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
 */

// === –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –ù–ê–í–ò–ì–ê–¶–ò–û–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò ===
function navigateToContacts(event) {
    event.preventDefault();
    console.log('üß≠ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º...');
    
    // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ù–ï —É–¥–∞–ª—è–µ–º argus_visited –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø—Ä–µ–ª–æ–∞–¥–µ—Ä–∞
    // sessionStorage.removeItem('argus_visited'); // –£–ë–†–ê–ù–û –ù–ê–í–°–ï–ì–î–ê!
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–ª–∞–≥–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    sessionStorage.setItem('navigate_to', 'contacts');
    sessionStorage.setItem('external_navigation', 'true');
    sessionStorage.setItem('navigation_source', 'litigation-financing');
    sessionStorage.setItem('navigation_timestamp', Date.now().toString());
    sessionStorage.setItem('target_ready_check', 'true'); // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–ª–∞–≥
    
    console.log('üìã –ò–°–ü–†–ê–í–õ–ï–ù–û: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–ª–∞–≥–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:', {
        navigate_to: sessionStorage.getItem('navigate_to'),
        external_navigation: sessionStorage.getItem('external_navigation'),
        source: sessionStorage.getItem('navigation_source'),
        timestamp: sessionStorage.getItem('navigation_timestamp'),
        target_ready_check: sessionStorage.getItem('target_ready_check')
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
    const button = event.target.closest('.cta-button');
    if (button) {
        button.style.transform = 'scale(0.95)';
        button.style.opacity = '0.8';
        button.textContent = '–ü–µ—Ä–µ—Ö–æ–¥–∏–º...';
        
        setTimeout(() => {
            button.style.transform = 'scale(1)';
            button.style.opacity = '1';
        }, 200);
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π –º–µ—Ç–æ–¥ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
    setTimeout(() => {
        try {
            // –ú–µ—Ç–æ–¥ 1: –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π Navigation API (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
            if ('navigation' in window && window.navigation.navigate) {
                console.log('üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º Navigation API');
                window.navigation.navigate('index.html#contacts');
            } else {
                // –ú–µ—Ç–æ–¥ 2: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π location.href
                console.log('üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º location.href');
                window.location.href = 'index.html#contacts';
            }
        } catch (error) {
            // –ú–µ—Ç–æ–¥ 3: Fallback —á–µ—Ä–µ–∑ replace
            console.warn('–ò–°–ü–†–ê–í–õ–ï–ù–û: –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º replace:', error);
            try {
                window.location.replace('index.html#contacts');
            } catch (replaceError) {
                // –ú–µ—Ç–æ–¥ 4: –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback —á–µ—Ä–µ–∑ assign
                console.error('–ò–°–ü–†–ê–í–õ–ï–ù–û: Replace –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –∏—Å–ø–æ–ª—å–∑—É–µ–º assign:', replaceError);
                window.location.assign('index.html#contacts');
            }
        }
    }, 100); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function navigateToContactsAlternative(event) {
    event.preventDefault();
    console.log('üß≠ –ò–°–ü–†–ê–í–õ–ï–ù–û –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–û: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º...');
    
    // –¢–µ –∂–µ —É–ª—É—á—à–µ–Ω–Ω—ã–µ —Ñ–ª–∞–≥–∏
    sessionStorage.setItem('navigate_to', 'contacts');
    sessionStorage.setItem('external_navigation', 'true');
    sessionStorage.setItem('navigation_source', 'litigation-financing-alt');
    sessionStorage.setItem('navigation_timestamp', Date.now().toString());
    sessionStorage.setItem('target_ready_check', 'true');
    sessionStorage.setItem('force_init', 'true'); // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–ª–∞–≥ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    
    // –ë–æ–ª–µ–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å retry –ª–æ–≥–∏–∫–æ–π
    let attempts = 0;
    const maxAttempts = 3;
    
    function attemptNavigation() {
        attempts++;
        console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ ${attempts}/${maxAttempts}`);
        
        try {
            // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
            if (attempts === 1) {
                window.location.href = 'index.html#contacts';
            } else if (attempts === 2) {
                window.location.replace('index.html#contacts');
            } else {
                window.location.assign('index.html#contacts');
            }
        } catch (error) {
            console.error(`–ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ø—ã—Ç–∫–∞ ${attempts} –Ω–µ —É–¥–∞–ª–∞—Å—å:`, error);
            
            if (attempts < maxAttempts) {
                setTimeout(() => {
                    attemptNavigation();
                }, 200);
            } else {
                console.error('–ò–°–ü–†–ê–í–õ–ï–ù–û: –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–µ —É–¥–∞–ª–∏—Å—å');
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.');
            }
        }
    }
    
    setTimeout(() => {
        attemptNavigation();
    }, 50);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ü–µ–ª–µ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
function checkTargetPageReady() {
    return new Promise((resolve) => {
        let attempts = 0;
        const maxAttempts = 100; // 10 —Å–µ–∫—É–Ω–¥
        
        const checkInterval = setInterval(() => {
            attempts++;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
            const criteriaChecks = {
                argusApp: window.ArgusApp && window.ArgusApp.verticalSwiper,
                swiperNotDestroyed: window.ArgusApp && !window.ArgusApp.verticalSwiper.destroyed,
                floatingHeader: document.getElementById('floatingHeader'),
                swiperWrapper: document.querySelector('.swiper-wrapper'),
                contactsSection: document.querySelector('#contacts')
            };
            
            const allReady = Object.values(criteriaChecks).every(check => !!check);
            
            if (allReady) {
                console.log(`‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –¶–µ–ª–µ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≥–æ—Ç–æ–≤–∞ (–ø–æ–ø—ã—Ç–∫–∞ ${attempts})`);
                clearInterval(checkInterval);
                resolve(true);
            } else if (attempts >= maxAttempts) {
                console.warn(`‚ö†Ô∏è –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–∞–π–º–∞—É—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–ø–æ–ø—ã—Ç–∫–∞ ${attempts})`);
                console.log('–°—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–æ–∫ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏:', criteriaChecks);
                clearInterval(checkInterval);
                resolve(false);
            }
            
            // –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 20 –ø–æ–ø—ã—Ç–æ–∫
            if (attempts % 20 === 0) {
                console.log(`üîÑ –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–ø–æ–ø—ã—Ç–∫–∞ ${attempts}/${maxAttempts})`);
                console.log('–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:', criteriaChecks);
            }
        }, 100);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ü–µ–ª–µ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function forceTargetPageInitialization() {
    console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ü–µ–ª–µ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
    
    // –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
    if (window.resetApp && typeof window.resetApp === 'function') {
        console.log('üîÑ –í—ã–∑—ã–≤–∞–µ–º resetApp()');
        window.resetApp();
    }
    
    if (window.forceReinitializeApp && typeof window.forceReinitializeApp === 'function') {
        console.log('üîÑ –í—ã–∑—ã–≤–∞–µ–º forceReinitializeApp()');
        window.forceReinitializeApp();
    }
    
    // –ï—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –ø—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
    setTimeout(() => {
        if (!window.ArgusApp || !window.ArgusApp.verticalSwiper) {
            console.warn('‚ö†Ô∏è –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º...');
            window.location.reload();
        }
    }, 3000);
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
window.navigateToContacts = navigateToContacts;
window.navigateToContactsAlternative = navigateToContactsAlternative;
window.checkTargetPageReady = checkTargetPageReady;
window.forceTargetPageInitialization = forceTargetPageInitialization;

// === –ì–õ–û–ë–ê–õ–¨–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï ===
let animationObserver = null;
let isPageVisible = true;

// === –û–ë–†–ê–ë–û–¢–ö–ê –í–ò–î–ò–ú–û–°–¢–ò –°–¢–†–ê–ù–ò–¶–´ ===
document.addEventListener('visibilitychange', function() {
    isPageVisible = !document.hidden;
    
    if (isPageVisible && window.litigationPageInitialized) {
        setTimeout(() => {
            refreshAnimations();
        }, 100);
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ä–∞–∑—É –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
    initializeLitigationPage();
});

function initializeLitigationPage() {
    if (window.litigationPageInitialized) return;
    window.litigationPageInitialized = true;

    console.log('‚öñÔ∏è –ò–°–ü–†–ê–í–õ–ï–ù–û: –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—É–¥–µ–±–Ω–æ–≥–æ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');

    try {
        setupAnimationSystem();
        setupInteractiveElements();
        setupNavigationEnhancements();
        setupPerformanceOptimizations();
        setupAccessibilityFeatures();
        
        setTimeout(() => {
            triggerInitialAnimations();
        }, 300);
        
        console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—É–¥–µ–±–Ω–æ–≥–æ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        
        document.body.classList.add('litigation-ready');
        
    } catch (error) {
        console.error('‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', error);
    }
}

// === –°–ò–°–¢–ï–ú–ê –ê–ù–ò–ú–ê–¶–ò–ò ===
function setupAnimationSystem() {
    console.log('‚ú® –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∏–º–∞—Ü–∏–∏...');
    
    const observerOptions = {
        root: null,
        rootMargin: '50px 0px -50px 0px',
        threshold: [0.1, 0.3, 0.5]
    };

    animationObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const element = entry.target;
                const delay = parseInt(element.dataset.delay) || 0;
                
                setTimeout(() => {
                    element.classList.add('animate');
                    
                    if (element.classList.contains('timeline-item')) {
                        addTimelineRipple(element);
                    }
                    
                    if (element.classList.contains('benefit-item')) {
                        createBenefitParticles(element);
                    }
                    
                }, delay);
                
                if (!element.classList.contains('repeat-animation')) {
                    animationObserver.unobserve(element);
                }
            }
        });
    }, observerOptions);

    const animatedElements = document.querySelectorAll('[data-animate]');
    animatedElements.forEach(element => {
        animationObserver.observe(element);
    });
    
    console.log(`üìä –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ ${animatedElements.length} –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏`);
}

// === –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´ ===
function setupInteractiveElements() {
    console.log('üéØ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤...');
    
    const contentSections = document.querySelectorAll('.content-section');
    contentSections.forEach(section => {
        section.addEventListener('mouseenter', function() {
            this.classList.add('section-hover');
            createSectionRipple(this);
        });
        
        section.addEventListener('mouseleave', function() {
            this.classList.remove('section-hover');
        });
    });
    
    const timelineItems = document.querySelectorAll('.timeline-item');
    timelineItems.forEach((item, index) => {
        item.addEventListener('mouseenter', function() {
            this.classList.add('timeline-hover');
            highlightTimelinePath(index);
        });
        
        item.addEventListener('mouseleave', function() {
            this.classList.remove('timeline-hover');
            resetTimelinePath();
        });
    });
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ CTA
    const ctaButtons = document.querySelectorAll('.cta-button');
    ctaButtons.forEach(button => {
        button.addEventListener('mouseenter', function() {
            createButtonRipple(this);
        });
        
        button.addEventListener('click', function(e) {
            createClickEffect(this, e);
            
            // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏"
            const buttonText = this.textContent.trim();
            if (buttonText.includes('–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏') || this.href && this.href.includes('#contacts')) {
                console.log('üéØ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ö–Ω–æ–ø–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –Ω–∞–∂–∞—Ç–∞, –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é...');
                
                // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏
                e.preventDefault();
                e.stopPropagation();
                
                // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
                this.style.transform = 'scale(0.95)';
                this.style.opacity = '0.8';
                
                setTimeout(() => {
                    this.style.transform = 'scale(1)';
                    this.style.opacity = '1';
                }, 200);
                
                // –í—ã–∑—ã–≤–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
                navigateToContacts(e);
            }
        });
    });
    
    const sectionIcons = document.querySelectorAll('.section-icon');
    sectionIcons.forEach(icon => {
        icon.addEventListener('mouseenter', function() {
            this.style.transform = 'scale(1.1) rotate(360deg)';
        });
        
        icon.addEventListener('mouseleave', function() {
            this.style.transform = 'scale(1) rotate(0deg)';
        });
    });
}

// === –£–õ–£–ß–®–ï–ù–ò–Ø –ù–ê–í–ò–ì–ê–¶–ò–ò ===
function setupNavigationEnhancements() {
    console.log('üß≠ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–ª—É—á—à–µ–Ω–∏–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...');
    
    const navButton = document.querySelector('.nav-button');
    if (navButton) {
        navButton.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-3px) scale(1.05)';
        });
        
        navButton.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0) scale(1)';
        });
        
        navButton.addEventListener('click', function(e) {
            e.preventDefault();
            
            this.style.transform = 'translateY(-3px) scale(0.95)';
            
            setTimeout(() => {
                this.style.transform = 'translateY(-3px) scale(1.05)';
                
                setTimeout(() => {
                    window.location.href = this.href;
                }, 150);
            }, 100);
        });
    }
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    const contactButtons = document.querySelectorAll('a[href*="#contacts"], a[href*="index.html#contacts"], .cta-button--secondary');
    contactButtons.forEach((button, index) => {
        console.log(`üîó –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ ${index + 1}:`, button.textContent.trim());
        
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        button.removeAttribute('onclick');
        
        // –ö–ª–æ–Ω–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
        const newButton = button.cloneNode(true);
        button.parentNode.replaceChild(newButton, button);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —É–ª—É—á—à–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        newButton.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            console.log('üéØ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ö–Ω–æ–ø–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –Ω–∞–∂–∞—Ç–∞ —á–µ—Ä–µ–∑ —É–ª—É—á—à–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫');
            console.log('–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏:', this.textContent.trim());
            console.log('Href –∫–Ω–æ–ø–∫–∏:', this.href || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
            
            // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
            this.style.transform = 'scale(0.95)';
            setTimeout(() => {
                this.style.transform = 'scale(1)';
            }, 150);
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            navigateToContacts(e);
        });
        
        console.log(`‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ª—É—á—à–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ ${index + 1} –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞`);
    });
    
    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—Å—ã–ª–æ–∫
    const internalLinks = document.querySelectorAll('a[href^="#"]:not([href*="contacts"])');
    internalLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });
    
    console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ª—É—á—à–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã');
}

// === –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò ===
function setupPerformanceOptimizations() {
    console.log('‚ö° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');
    
    let scrollTimeout;
    window.addEventListener('scroll', function() {
        if (scrollTimeout) {
            clearTimeout(scrollTimeout);
        }
        
        scrollTimeout = setTimeout(() => {
            handleScroll();
        }, 16);
    });
    
    let resizeTimeout;
    window.addEventListener('resize', function() {
        if (resizeTimeout) {
            clearTimeout(resizeTimeout);
        }
        
        resizeTimeout = setTimeout(() => {
            handleResize();
        }, 250);
    });
    
    preloadCriticalAssets();
}

// === –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –î–û–°–¢–£–ü–ù–û–°–¢–ò ===
function setupAccessibilityFeatures() {
    console.log('‚ôø –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏...');
    
    const focusableElements = document.querySelectorAll(
        'a, button, [tabindex]:not([tabindex="-1"])'
    );
    
    focusableElements.forEach(element => {
        element.addEventListener('focus', function() {
            this.classList.add('focused');
        });
        
        element.addEventListener('blur', function() {
            this.classList.remove('focused');
        });
    });
    
    document.addEventListener('keydown', function(e) {
        switch(e.key) {
            case 'Escape':
                document.querySelectorAll('.section-hover, .timeline-hover')
                    .forEach(el => el.classList.remove('section-hover', 'timeline-hover'));
                break;
                
            case 'Tab':
                document.body.classList.add('keyboard-navigation');
                break;
        }
    });
    
    document.addEventListener('mousedown', function() {
        document.body.classList.remove('keyboard-navigation');
    });
    
    if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
        document.body.classList.add('reduced-motion');
        console.log('üîá –†–µ–∂–∏–º —Å–Ω–∏–∂–µ–Ω–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω');
    }
}

// === –≠–§–§–ï–ö–¢–´ –ê–ù–ò–ú–ê–¶–ò–ò ===
function addTimelineRipple(timelineItem) {
    const ripple = document.createElement('div');
    ripple.className = 'timeline-ripple';
    ripple.style.cssText = `
        position: absolute;
        top: 50%;
        left: 30px;
        width: 0;
        height: 0;
        background: radial-gradient(circle, rgba(212, 175, 55, 0.3) 0%, transparent 70%);
        border-radius: 50%;
        transform: translate(-50%, -50%);
        animation: timelineRipple 1s ease-out forwards;
        pointer-events: none;
        z-index: 1;
    `;
    
    if (!document.querySelector('#timelineRippleStyles')) {
        const style = document.createElement('style');
        style.id = 'timelineRippleStyles';
        style.textContent = `
            @keyframes timelineRipple {
                to {
                    width: 200px;
                    height: 200px;
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    }
    
    timelineItem.appendChild(ripple);
    
    setTimeout(() => {
        if (ripple && ripple.parentNode) {
            ripple.remove();
        }
    }, 1000);
}

function createBenefitParticles(benefitItem) {
    const particles = 3;
    for (let i = 0; i < particles; i++) {
        setTimeout(() => {
            const particle = document.createElement('div');
            particle.className = 'benefit-particle';
            particle.style.cssText = `
                position: absolute;
                top: ${Math.random() * 100}%;
                left: ${Math.random() * 100}%;
                width: 4px;
                height: 4px;
                background: #d4af37;
                border-radius: 50%;
                animation: particleFloat 2s ease-out forwards;
                pointer-events: none;
                z-index: 1;
            `;
            
            if (!document.querySelector('#particleStyles')) {
                const style = document.createElement('style');
                style.id = 'particleStyles';
                style.textContent = `
                    @keyframes particleFloat {
                        to {
                            transform: translateY(-50px);
                            opacity: 0;
                        }
                    }
                `;
                document.head.appendChild(style);
            }
            
            benefitItem.appendChild(particle);
            
            setTimeout(() => {
                if (particle && particle.parentNode) {
                    particle.remove();
                }
            }, 2000);
        }, i * 200);
    }
}

function createSectionRipple(section) {
    const ripple = document.createElement('div');
    ripple.className = 'section-ripple';
    ripple.style.cssText = `
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: radial-gradient(circle at center, rgba(212, 175, 55, 0.1) 0%, transparent 70%);
        animation: sectionRipple 1.5s ease-out forwards;
        pointer-events: none;
        z-index: 1;
    `;
    
    if (!document.querySelector('#sectionRippleStyles')) {
        const style = document.createElement('style');
        style.id = 'sectionRippleStyles';
        style.textContent = `
            @keyframes sectionRipple {
                from {
                    transform: scale(0);
                    opacity: 1;
                }
                to {
                    transform: scale(1);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    }
    
    section.appendChild(ripple);
    
    setTimeout(() => {
        if (ripple && ripple.parentNode) {
            ripple.remove();
        }
    }, 1500);
}

function createButtonRipple(button) {
    const ripple = document.createElement('div');
    ripple.className = 'button-ripple';
    ripple.style.cssText = `
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        background: rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        transform: translate(-50%, -50%);
        animation: buttonRipple 0.6s ease-out forwards;
        pointer-events: none;
        z-index: 1;
    `;
    
    if (!document.querySelector('#buttonRippleStyles')) {
        const style = document.createElement('style');
        style.id = 'buttonRippleStyles';
        style.textContent = `
            @keyframes buttonRipple {
                to {
                    width: 200px;
                    height: 200px;
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    }
    
    button.appendChild(ripple);
    
    setTimeout(() => {
        if (ripple && ripple.parentNode) {
            ripple.remove();
        }
    }, 600);
}

function createClickEffect(button, event) {
    const rect = button.getBoundingClientRect();
    const x = event.clientX - rect.left;
    const y = event.clientY - rect.top;
    
    const click = document.createElement('div');
    click.className = 'click-effect';
    click.style.cssText = `
        position: absolute;
        top: ${y}px;
        left: ${x}px;
        width: 0;
        height: 0;
        background: rgba(255, 255, 255, 0.5);
        border-radius: 50%;
        transform: translate(-50%, -50%);
        animation: clickEffect 0.4s ease-out forwards;
        pointer-events: none;
        z-index: 2;
    `;
    
    if (!document.querySelector('#clickEffectStyles')) {
        const style = document.createElement('style');
        style.id = 'clickEffectStyles';
        style.textContent = `
            @keyframes clickEffect {
                to {
                    width: 100px;
                    height: 100px;
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    }
    
    button.appendChild(click);
    
    setTimeout(() => {
        if (click && click.parentNode) {
            click.remove();
        }
    }, 400);
}

function highlightTimelinePath(index) {
    const timeline = document.querySelector('.process-timeline');
    if (timeline) {
        timeline.style.setProperty('--highlight-progress', `${(index + 1) * 20}%`);
        timeline.classList.add('path-highlighted');
    }
}

function resetTimelinePath() {
    const timeline = document.querySelector('.process-timeline');
    if (timeline) {
        timeline.classList.remove('path-highlighted');
    }
}

// === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô ===
function handleScroll() {
    const scrollY = window.scrollY;
    
    const decorations = document.querySelectorAll('.decoration-circle, .floating-shape');
    decorations.forEach((decoration, index) => {
        const speed = 0.1 + (index * 0.05);
        const yPos = -(scrollY * speed);
        decoration.style.transform = `translateY(${yPos}px)`;
    });
}

function handleResize() {
    if (animationObserver) {
        const animatedElements = document.querySelectorAll('[data-animate]:not(.animate)');
        animatedElements.forEach(element => {
            animationObserver.observe(element);
        });
    }
}

function triggerInitialAnimations() {
    const headerElements = document.querySelectorAll('.litigation-header *');
    headerElements.forEach((element, index) => {
        setTimeout(() => {
            element.style.animation = 'fadeInUp 0.8s ease-out forwards';
        }, index * 100);
    });
}

function refreshAnimations() {
    const animatedElements = document.querySelectorAll('[data-animate].animate');
    animatedElements.forEach(element => {
        element.classList.remove('animate');
        setTimeout(() => {
            element.classList.add('animate');
        }, 50);
    });
}

function preloadCriticalAssets() {
    const criticalAssets = [
        '../img/bcg4.png'
    ];
    
    criticalAssets.forEach(asset => {
        const link = document.createElement('link');
        link.rel = 'preload';
        link.as = 'image';
        link.href = asset;
        document.head.appendChild(link);
    });
}

// === –°–õ–£–ñ–ï–ë–ù–´–ï –§–£–ù–ö–¶–ò–ò ===
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

// === –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö ===
window.addEventListener('error', function(e) {
    console.error('–ò–°–ü–†–ê–í–õ–ï–ù–û: –û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å—É–¥–µ–±–Ω–æ–≥–æ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è:', e.error);
});

window.addEventListener('unhandledrejection', function(e) {
    console.error('–ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å—É–¥–µ–±–Ω–æ–≥–æ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è:', e.reason);
});

// === –û–ß–ò–°–¢–ö–ê ===
window.addEventListener('beforeunload', function() {
    if (animationObserver) {
        animationObserver.disconnect();
    }
});

// === –ü–û–ú–û–©–ù–ò–ö–ò –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ò ===
if (window.location.search.includes('debug=true')) {
    window.litigationDebug = {
        reinitialize: function() {
            window.litigationPageInitialized = false;
            initializeLitigationPage();
        },
        triggerAnimations: triggerInitialAnimations,
        refreshAnimations: refreshAnimations,
        testNavigation: function() {
            console.log('üß™ –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º...');
            navigateToContacts({preventDefault: () => {}});
        },
        testAlternativeNavigation: function() {
            console.log('üß™ –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º...');
            navigateToContactsAlternative({preventDefault: () => {}});
        },
        checkTargetReady: checkTargetPageReady,
        forceTargetInit: forceTargetPageInitialization,
        getStatus: function() {
            return {
                initialized: window.litigationPageInitialized,
                observerActive: !!animationObserver,
                animatedElements: document.querySelectorAll('[data-animate].animate').length,
                navigationFlags: {
                    navigate_to: sessionStorage.getItem('navigate_to'),
                    external_navigation: sessionStorage.getItem('external_navigation'),
                    navigation_source: sessionStorage.getItem('navigation_source')
                }
            };
        }
    };
    
    console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—É–¥–µ–±–Ω–æ–≥–æ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∫–ª—é—á–µ–Ω');
    console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: litigationDebug.testNavigation(), litigationDebug.getStatus()');
}

// === –§–£–ù–ö–¶–ò–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ===
window.testContactsNavigation = function() {
    console.log('üß™ –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º...');
    const testEvent = { preventDefault: () => {}, target: document.body };
    navigateToContacts(testEvent);
};

window.testAlternativeContactsNavigation = function() {
    console.log('üß™ –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º...');
    const testEvent = { preventDefault: () => {}, target: document.body };
    navigateToContactsAlternative(testEvent);
};

console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å—É–¥–µ–±–Ω–æ–≥–æ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');