/**
 * Argus Law Firm - Consultation Page Script (–ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
 * –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ª—É—á—à–µ–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º –∏ —Å—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞
 */

// === –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –ù–ê–í–ò–ì–ê–¶–ò–û–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò ===
function navigateToContacts(event) {
    event.preventDefault();
    console.log('üß≠ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º —Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
    
    // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ù–ï —É–¥–∞–ª—è–µ–º argus_visited!
    // sessionStorage.removeItem('argus_visited'); // –ù–ê–í–°–ï–ì–î–ê –£–ë–†–ê–ù–û!
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–ª–∞–≥–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    sessionStorage.setItem('navigate_to', 'contacts');
    sessionStorage.setItem('external_navigation', 'true');
    sessionStorage.setItem('navigation_source', 'consultation');
    sessionStorage.setItem('navigation_timestamp', Date.now().toString());
    sessionStorage.setItem('target_ready_check', 'true');
    
    console.log('üìã –ò–°–ü–†–ê–í–õ–ï–ù–û: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–ª–∞–≥–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:', {
        navigate_to: sessionStorage.getItem('navigate_to'),
        external_navigation: sessionStorage.getItem('external_navigation'),
        source: sessionStorage.getItem('navigation_source'),
        timestamp: sessionStorage.getItem('navigation_timestamp')
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
    const button = event.target.closest('.contact-button');
    if (button) {
        button.style.transform = 'scale(0.95)';
        button.style.opacity = '0.8';
        
        // –ï—Å–ª–∏ —ç—Ç–æ –∫–Ω–æ–ø–∫–∞ "–ù–∞—à –æ—Ñ–∏—Å", –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç
        if (button.textContent.includes('–ù–∞—à –æ—Ñ–∏—Å')) {
            const originalText = button.innerHTML;
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –ü–µ—Ä–µ—Ö–æ–¥–∏–º...';
            
            setTimeout(() => {
                button.innerHTML = originalText;
            }, 1000);
        }
        
        setTimeout(() => {
            button.style.transform = 'scale(1)';
            button.style.opacity = '1';
        }, 200);
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ fallback-–∞–º–∏
    setTimeout(() => {
        executeNavigationWithRetry();
    }, 100);
}

// –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
function executeNavigationWithRetry() {
    let attempts = 0;
    const maxAttempts = 3;
    const methods = [
        () => {
            console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ Navigation API');
            if ('navigation' in window && window.navigation.navigate) {
                window.navigation.navigate('index.html#contacts');
                return true;
            }
            return false;
        },
        () => {
            console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ location.href');
            window.location.href = 'index.html#contacts';
            return true;
        },
        () => {
            console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ location.replace');
            window.location.replace('index.html#contacts');
            return true;
        }
    ];
    
    function attemptNavigation() {
        if (attempts >= maxAttempts) {
            console.error('–ò–°–ü–†–ê–í–õ–ï–ù–û: –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–µ —É–¥–∞–ª–∏—Å—å');
            showNavigationError();
            return;
        }
        
        try {
            const method = methods[attempts];
            const success = method();
            
            if (!success && attempts < maxAttempts - 1) {
                attempts++;
                setTimeout(attemptNavigation, 200);
            }
        } catch (error) {
            console.error(`–ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ø—ã—Ç–∫–∞ ${attempts + 1} –Ω–µ —É–¥–∞–ª–∞—Å—å:`, error);
            attempts++;
            
            if (attempts < maxAttempts) {
                setTimeout(attemptNavigation, 200);
            } else {
                showNavigationError();
            }
        }
    }
    
    attemptNavigation();
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function showNavigationError() {
    console.error('–ò–°–ü–†–ê–í–õ–ï–ù–û: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
    
    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(212, 175, 55, 0.95);
        color: #1a1109;
        padding: 20px 30px;
        border-radius: 10px;
        font-weight: 600;
        z-index: 10000;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
    `;
    notification.textContent = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.';
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        if (notification && notification.parentNode) {
            notification.remove();
        }
    }, 5000);
}

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function navigateToContactsAlternative(event) {
    event.preventDefault();
    console.log('üß≠ –ò–°–ü–†–ê–í–õ–ï–ù–û –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–û: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º...');
    
    // –¢–µ –∂–µ —É–ª—É—á—à–µ–Ω–Ω—ã–µ —Ñ–ª–∞–≥–∏
    sessionStorage.setItem('navigate_to', 'contacts');
    sessionStorage.setItem('external_navigation', 'true');
    sessionStorage.setItem('navigation_source', 'consultation-alt');
    sessionStorage.setItem('navigation_timestamp', Date.now().toString());
    sessionStorage.setItem('target_ready_check', 'true');
    sessionStorage.setItem('force_init', 'true');
    
    // –ü—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ —Å fallback
    try {
        window.location.assign('index.html#contacts');
    } catch (error) {
        console.error('–ò–°–ü–†–ê–í–õ–ï–ù–û: Assign –Ω–µ —É–¥–∞–ª—Å—è, –ø—Ä–æ–±—É–µ–º replace:', error);
        try {
            window.location.replace('index.html#contacts');
        } catch (replaceError) {
            console.error('–ò–°–ü–†–ê–í–õ–ï–ù–û: Replace –Ω–µ —É–¥–∞–ª—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º href:', replaceError);
            window.location.href = 'index.html#contacts';
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ü–µ–ª–µ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function checkTargetPageReady() {
    return new Promise((resolve) => {
        let attempts = 0;
        const maxAttempts = 100;
        
        const checkInterval = setInterval(() => {
            attempts++;
            
            const criteriaChecks = {
                argusApp: window.ArgusApp && window.ArgusApp.verticalSwiper,
                swiperNotDestroyed: window.ArgusApp && !window.ArgusApp.verticalSwiper.destroyed,
                floatingHeader: document.getElementById('floatingHeader'),
                swiperWrapper: document.querySelector('.swiper-wrapper'),
                contactsSection: document.querySelector('#contacts'),
                mainAppInitialized: window.mainAppInitialized
            };
            
            const allReady = Object.values(criteriaChecks).every(check => !!check);
            
            if (allReady) {
                console.log(`‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –¶–µ–ª–µ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≥–æ—Ç–æ–≤–∞ (–ø–æ–ø—ã—Ç–∫–∞ ${attempts})`);
                clearInterval(checkInterval);
                resolve(true);
            } else if (attempts >= maxAttempts) {
                console.warn(`‚ö†Ô∏è –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–∞–π–º–∞—É—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–ø–æ–ø—ã—Ç–∫–∞ ${attempts})`);
                console.log('–°—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–æ–∫ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏:', criteriaChecks);
                clearInterval(checkInterval);
                resolve(false);
            }
            
            if (attempts % 25 === 0) {
                console.log(`üîÑ –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ (–ø–æ–ø—ã—Ç–∫–∞ ${attempts}/${maxAttempts})`);
            }
        }, 100);
    });
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
window.navigateToContacts = navigateToContacts;
window.navigateToContactsAlternative = navigateToContactsAlternative;
window.checkTargetPageReady = checkTargetPageReady;

// === –ì–õ–û–ë–ê–õ–¨–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï ===
let animationObserver = null;
let isPageVisible = true;
let modalOpen = false;

// === –û–ë–†–ê–ë–û–¢–ö–ê –í–ò–î–ò–ú–û–°–¢–ò –°–¢–†–ê–ù–ò–¶–´ ===
document.addEventListener('visibilitychange', function() {
    isPageVisible = !document.hidden;
    
    if (isPageVisible && window.consultationPageInitialized) {
        setTimeout(() => {
            refreshAnimations();
        }, 100);
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ä–∞–∑—É –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
    console.log('üìã –ò–°–ü–†–ê–í–õ–ï–ù–û: DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
    initializeConsultationPage();
});

function initializeConsultationPage() {
    if (window.consultationPageInitialized) return;
    window.consultationPageInitialized = true;

    console.log('üìã –ò–°–ü–†–ê–í–õ–ï–ù–û: –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');

    try {
        setupAnimationSystem();
        setupModalSystem();
        setupInteractiveElements();
        setupNavigationEnhancements();
        setupPerformanceOptimizations();
        setupAccessibilityFeatures();
        
        setTimeout(() => {
            triggerInitialAnimations();
        }, 300);
        
        console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        
        document.body.classList.add('consultation-ready');
        
    } catch (error) {
        console.error('‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', error);
    }
}

// === –°–ò–°–¢–ï–ú–ê –ê–ù–ò–ú–ê–¶–ò–ò ===
function setupAnimationSystem() {
    console.log('‚ú® –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∏–º–∞—Ü–∏–∏...');
    
    const observerOptions = {
        root: null,
        rootMargin: '50px 0px -50px 0px',
        threshold: [0.1, 0.3, 0.5]
    };

    animationObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const element = entry.target;
                const delay = parseInt(element.dataset.delay) || 0;
                
                setTimeout(() => {
                    element.classList.add('animate');
                    
                    if (element.classList.contains('main-cta-section')) {
                        createCtaRipple(element);
                    }
                    
                    if (element.classList.contains('feature-item')) {
                        createFeatureParticles(element);
                    }
                    
                }, delay);
                
                animationObserver.unobserve(element);
            }
        });
    }, observerOptions);

    const animatedElements = document.querySelectorAll('[data-animate]');
    animatedElements.forEach(element => {
        animationObserver.observe(element);
    });
    
    console.log(`üìä –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ ${animatedElements.length} –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏`);
}

// === –°–ò–°–¢–ï–ú–ê –ú–û–î–ê–õ–¨–ù–´–• –û–ö–û–ù ===
function setupModalSystem() {
    console.log('üéØ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω...');
    
    setTimeout(() => {
        const modal = document.getElementById('consultationModal');
        const modalOverlay = document.getElementById('modalOverlay');
        const modalClose = document.getElementById('modalClose');
        const consultationInfoBtn = document.getElementById('consultationInfoBtn');
        
        console.log('üîç –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', {
            modal: !!modal,
            consultationInfoBtn: !!consultationInfoBtn,
            modalOverlay: !!modalOverlay,
            modalClose: !!modalClose
        });
        
        if (!modal) {
            console.error('‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–û: –≠–ª–µ–º–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ #consultationModal –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        if (!consultationInfoBtn) {
            console.error('‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–û: –ö–Ω–æ–ø–∫–∞ #consultationInfoBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }
        
        console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–∞–π–¥–µ–Ω—ã, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...');
        
        // –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        function openModal() {
            if (modalOpen) return;
            
            console.log('üéØ –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞...');
            modalOpen = true;
            modal.style.display = 'flex';
            document.body.style.overflow = 'hidden';
            
            requestAnimationFrame(() => {
                modal.style.opacity = '1';
                modal.classList.add('show');
            });
            
            const firstFocusable = modal.querySelector('button, [tabindex]:not([tabindex="-1"])');
            if (firstFocusable) {
                setTimeout(() => firstFocusable.focus(), 100);
            }
            
            console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ');
        }
        
        // –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        function closeModal() {
            if (!modalOpen) return;
            
            console.log('üìã –ò–°–ü–†–ê–í–õ–ï–ù–û: –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞...');
            modalOpen = false;
            modal.style.opacity = '0';
            modal.classList.remove('show');
            
            setTimeout(() => {
                modal.style.display = 'none';
                document.body.style.overflow = '';
            }, 300);
            
            if (consultationInfoBtn) {
                consultationInfoBtn.focus();
            }
            
            console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ');
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
        consultationInfoBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            console.log('üìã –ò–°–ü–†–ê–í–õ–ï–ù–û: –ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞ - –æ—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞...');
            openModal();
        });
        
        console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–æ–±–∞–≤–ª–µ–Ω –∫ –∫–Ω–æ–ø–∫–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏');
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        if (modalClose) {
            modalClose.addEventListener('click', function(e) {
                e.preventDefault();
                closeModal();
            });
            console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è –¥–æ–±–∞–≤–ª–µ–Ω');
        }
        
        if (modalOverlay) {
            modalOverlay.addEventListener('click', function(e) {
                if (e.target === modalOverlay) {
                    closeModal();
                }
            });
            console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –æ–≤–µ—Ä–ª–µ—é –¥–æ–±–∞–≤–ª–µ–Ω');
        }
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∞–≤–∏—à–µ Escape
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && modalOpen) {
                closeModal();
            }
        });
        
        // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        window.openConsultationModal = openModal;
        window.closeConsultationModal = closeModal;
        
        // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        setTimeout(() => {
            console.log('üß™ –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞...');
            if (consultationInfoBtn && typeof consultationInfoBtn.click === 'function') {
                console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ö–Ω–æ–ø–∫–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤–∞ –∏ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–∞');
            } else {
                console.error('‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –Ω–µ —É–¥–∞–ª–∞—Å—å!');
            }
        }, 500);
        
    }, 100);
}

// === –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´ ===
function setupInteractiveElements() {
    console.log('üéØ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤...');
    
    // –£–ª—É—á—à–µ–Ω–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –Ω–∞–≤–µ–¥–µ–Ω–∏—è –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
    const cards = document.querySelectorAll('.cta-card, .features-section, .contact-card');
    cards.forEach(card => {
        card.addEventListener('mouseenter', function() {
            this.classList.add('card-hover');
            createCardRipple(this);
        });
        
        card.addEventListener('mouseleave', function() {
            this.classList.remove('card-hover');
        });
    });
    
    // –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–π
    const featureItems = document.querySelectorAll('.feature-item');
    featureItems.forEach((item, index) => {
        item.addEventListener('mouseenter', function() {
            this.classList.add('feature-hover');
            createFeatureGlow(this);
        });
        
        item.addEventListener('mouseleave', function() {
            this.classList.remove('feature-hover');
        });
    });
    
    // –£–ª—É—á—à–µ–Ω–Ω—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
    const buttons = document.querySelectorAll('.consultation-info-btn, .contact-button');
    buttons.forEach(button => {
        button.addEventListener('mouseenter', function() {
            createButtonRipple(this);
        });
        
        button.addEventListener('click', function(e) {
            if (!this.href) {
                createClickEffect(this, e);
            }
        });
    });
    
    // –ê–Ω–∏–º–∞—Ü–∏–∏ –∏–∫–æ–Ω–æ–∫ —Å–µ–∫—Ü–∏–π
    const sectionIcons = document.querySelectorAll('.section-icon, .cta-icon');
    sectionIcons.forEach(icon => {
        icon.addEventListener('mouseenter', function() {
            this.style.transform = 'scale(1.1) rotate(360deg)';
        });
        
        icon.addEventListener('mouseleave', function() {
            this.style.transform = 'scale(1) rotate(0deg)';
        });
    });
}

// === –£–õ–£–ß–®–ï–ù–ò–Ø –ù–ê–í–ò–ì–ê–¶–ò–ò ===
function setupNavigationEnhancements() {
    console.log('üß≠ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–ª—É—á—à–µ–Ω–∏–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...');
    
    const navButton = document.querySelector('.nav-button');
    if (navButton) {
        navButton.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-3px) scale(1.05)';
        });
        
        navButton.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0) scale(1)';
        });
        
        navButton.addEventListener('click', function(e) {
            e.preventDefault();
            
            this.style.transform = 'translateY(-3px) scale(0.95)';
            
            setTimeout(() => {
                this.style.transform = 'translateY(-3px) scale(1.05)';
                
                setTimeout(() => {
                    window.location.href = this.href;
                }, 150);
            }, 100);
        });
    }
    
    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—Å—ã–ª–æ–∫
    const internalLinks = document.querySelectorAll('a[href^="#"]');
    internalLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });
}

// === –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò ===
function setupPerformanceOptimizations() {
    console.log('‚ö° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');
    
    let scrollTimeout;
    window.addEventListener('scroll', function() {
        if (scrollTimeout) {
            clearTimeout(scrollTimeout);
        }
        
        scrollTimeout = setTimeout(() => {
            handleScroll();
        }, 16);
    });
    
    let resizeTimeout;
    window.addEventListener('resize', function() {
        if (resizeTimeout) {
            clearTimeout(resizeTimeout);
        }
        
        resizeTimeout = setTimeout(() => {
            handleResize();
        }, 250);
    });
    
    preloadCriticalAssets();
}

// === –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –î–û–°–¢–£–ü–ù–û–°–¢–ò ===
function setupAccessibilityFeatures() {
    console.log('‚ôø –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏...');
    
    const focusableElements = document.querySelectorAll(
        'a, button, [tabindex]:not([tabindex="-1"])'
    );
    
    focusableElements.forEach(element => {
        element.addEventListener('focus', function() {
            this.classList.add('focused');
        });
        
        element.addEventListener('blur', function() {
            this.classList.remove('focused');
        });
    });
    
    document.addEventListener('keydown', function(e) {
        switch(e.key) {
            case 'Tab':
                document.body.classList.add('keyboard-navigation');
                break;
                
            case 'Enter':
            case ' ':
                if (e.target.classList.contains('consultation-info-btn')) {
                    e.preventDefault();
                    e.target.click();
                }
                break;
        }
    });
    
    document.addEventListener('mousedown', function() {
        document.body.classList.remove('keyboard-navigation');
    });
    
    if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
        document.body.classList.add('reduced-motion');
        console.log('üîá –†–µ–∂–∏–º —Å–Ω–∏–∂–µ–Ω–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω');
    }
}

// === –≠–§–§–ï–ö–¢–´ –ê–ù–ò–ú–ê–¶–ò–ò ===
function createCtaRipple(ctaSection) {
    const ripple = document.createElement('div');
    ripple.className = 'cta-ripple';
    ripple.style.cssText = `
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        background: radial-gradient(circle, rgba(212, 175, 55, 0.2) 0%, transparent 70%);
        border-radius: 50%;
        transform: translate(-50%, -50%);
        animation: ctaRipple 1.5s ease-out forwards;
        pointer-events: none;
        z-index: 1;
    `;
    
    if (!document.querySelector('#ctaRippleStyles')) {
        const style = document.createElement('style');
        style.id = 'ctaRippleStyles';
        style.textContent = `
            @keyframes ctaRipple {
                to {
                    width: 300px;
                    height: 300px;
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    }
    
    ctaSection.appendChild(ripple);
    
    setTimeout(() => {
        if (ripple && ripple.parentNode) {
            ripple.remove();
        }
    }, 1500);
}

function createFeatureParticles(featureItem) {
    const particles = 2;
    for (let i = 0; i < particles; i++) {
        setTimeout(() => {
            const particle = document.createElement('div');
            particle.className = 'feature-particle';
            particle.style.cssText = `
                position: absolute;
                top: ${Math.random() * 100}%;
                left: ${Math.random() * 100}%;
                width: 3px;
                height: 3px;
                background: #d4af37;
                border-radius: 50%;
                animation: particleFloat 2s ease-out forwards;
                pointer-events: none;
                z-index: 1;
            `;
            
            if (!document.querySelector('#particleStyles')) {
                const style = document.createElement('style');
                style.id = 'particleStyles';
                style.textContent = `
                    @keyframes particleFloat {
                        to {
                            transform: translateY(-40px);
                            opacity: 0;
                        }
                    }
                `;
                document.head.appendChild(style);
            }
            
            featureItem.appendChild(particle);
            
            setTimeout(() => {
                if (particle && particle.parentNode) {
                    particle.remove();
                }
            }, 2000);
        }, i * 300);
    }
}

function createCardRipple(card) {
    const ripple = document.createElement('div');
    ripple.className = 'card-ripple';
    ripple.style.cssText = `
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: radial-gradient(circle at center, rgba(212, 175, 55, 0.1) 0%, transparent 70%);
        animation: cardRipple 1.2s ease-out forwards;
        pointer-events: none;
        z-index: 1;
    `;
    
    if (!document.querySelector('#cardRippleStyles')) {
        const style = document.createElement('style');
        style.id = 'cardRippleStyles';
        style.textContent = `
            @keyframes cardRipple {
                from {
                    transform: scale(0);
                    opacity: 1;
                }
                to {
                    transform: scale(1);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    }
    
    card.appendChild(ripple);
    
    setTimeout(() => {
        if (ripple && ripple.parentNode) {
            ripple.remove();
        }
    }, 1200);
}

function createFeatureGlow(feature) {
    const glow = document.createElement('div');
    glow.className = 'feature-glow';
    glow.style.cssText = `
        position: absolute;
        top: -10px;
        left: -10px;
        right: -10px;
        bottom: -10px;
        background: linear-gradient(45deg, rgba(212, 175, 55, 0.1), rgba(244, 208, 63, 0.1));
        border-radius: 15px;
        animation: featureGlow 0.8s ease-out forwards;
        pointer-events: none;
        z-index: 0;
    `;
    
    if (!document.querySelector('#featureGlowStyles')) {
        const style = document.createElement('style');
        style.id = 'featureGlowStyles';
        style.textContent = `
            @keyframes featureGlow {
                from {
                    opacity: 0;
                    transform: scale(0.8);
                }
                to {
                    opacity: 1;
                    transform: scale(1);
                }
            }
        `;
        document.head.appendChild(style);
    }
    
    feature.appendChild(glow);
    
    setTimeout(() => {
        if (glow && glow.parentNode) {
            glow.remove();
        }
    }, 800);
}

function createButtonRipple(button) {
    const ripple = document.createElement('div');
    ripple.className = 'button-ripple';
    ripple.style.cssText = `
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        background: rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        transform: translate(-50%, -50%);
        animation: buttonRipple 0.6s ease-out forwards;
        pointer-events: none;
        z-index: 1;
    `;
    
    if (!document.querySelector('#buttonRippleStyles')) {
        const style = document.createElement('style');
        style.id = 'buttonRippleStyles';
        style.textContent = `
            @keyframes buttonRipple {
                to {
                    width: 200px;
                    height: 200px;
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    }
    
    button.appendChild(ripple);
    
    setTimeout(() => {
        if (ripple && ripple.parentNode) {
            ripple.remove();
        }
    }, 600);
}

function createClickEffect(button, event) {
    const rect = button.getBoundingClientRect();
    const x = event.clientX - rect.left;
    const y = event.clientY - rect.top;
    
    const click = document.createElement('div');
    click.className = 'click-effect';
    click.style.cssText = `
        position: absolute;
        top: ${y}px;
        left: ${x}px;
        width: 0;
        height: 0;
        background: rgba(255, 255, 255, 0.5);
        border-radius: 50%;
        transform: translate(-50%, -50%);
        animation: clickEffect 0.4s ease-out forwards;
        pointer-events: none;
        z-index: 2;
    `;
    
    if (!document.querySelector('#clickEffectStyles')) {
        const style = document.createElement('style');
        style.id = 'clickEffectStyles';
        style.textContent = `
            @keyframes clickEffect {
                to {
                    width: 100px;
                    height: 100px;
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    }
    
    button.appendChild(click);
    
    setTimeout(() => {
        if (click && click.parentNode) {
            click.remove();
        }
    }, 400);
}

// === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô ===
function handleScroll() {
    const scrollY = window.scrollY;
    
    const decorations = document.querySelectorAll('.decoration-circle, .floating-shape');
    decorations.forEach((decoration, index) => {
        const speed = 0.1 + (index * 0.05);
        const yPos = -(scrollY * speed);
        decoration.style.transform = `translateY(${yPos}px)`;
    });
}

function handleResize() {
    if (animationObserver) {
        const animatedElements = document.querySelectorAll('[data-animate]:not(.animate)');
        animatedElements.forEach(element => {
            animationObserver.observe(element);
        });
    }
}

function triggerInitialAnimations() {
    const headerElements = document.querySelectorAll('.consultation-header *');
    headerElements.forEach((element, index) => {
        setTimeout(() => {
            element.style.animation = 'fadeInUp 0.8s ease-out forwards';
        }, index * 100);
    });
}

function refreshAnimations() {
    const animatedElements = document.querySelectorAll('[data-animate].animate');
    animatedElements.forEach(element => {
        element.classList.remove('animate');
        setTimeout(() => {
            element.classList.add('animate');
        }, 50);
    });
}

function preloadCriticalAssets() {
    const criticalAssets = [
        '../img/bcg4.png'
    ];
    
    criticalAssets.forEach(asset => {
        const link = document.createElement('link');
        link.rel = 'preload';
        link.as = 'image';
        link.href = asset;
        document.head.appendChild(link);
    });
}

// === –°–õ–£–ñ–ï–ë–ù–´–ï –§–£–ù–ö–¶–ò–ò ===
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

// === –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö ===
window.addEventListener('error', function(e) {
    console.error('–ò–°–ü–†–ê–í–õ–ï–ù–û: –û—à–∏–±–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ:', e.error);
});

window.addEventListener('unhandledrejection', function(e) {
    console.error('–ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ:', e.reason);
});

// === –û–ß–ò–°–¢–ö–ê ===
window.addEventListener('beforeunload', function() {
    if (animationObserver) {
        animationObserver.disconnect();
    }
});

// === –ü–û–ú–û–©–ù–ò–ö–ò –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ò ===
if (window.location.search.includes('debug=true')) {
    window.consultationDebug = {
        reinitialize: function() {
            window.consultationPageInitialized = false;
            initializeConsultationPage();
        },
        openModal: () => window.openConsultationModal(),
        closeModal: () => window.closeConsultationModal(),
        triggerAnimations: triggerInitialAnimations,
        refreshAnimations: refreshAnimations,
        testNavigation: () => navigateToContacts({preventDefault: () => {}}),
        testAlternativeNavigation: () => navigateToContactsAlternative({preventDefault: () => {}}),
        getStatus: function() {
            return {
                initialized: window.consultationPageInitialized,
                modalOpen: modalOpen,
                observerActive: !!animationObserver,
                animatedElements: document.querySelectorAll('[data-animate].animate').length,
                navigationFlags: {
                    navigate_to: sessionStorage.getItem('navigate_to'),
                    external_navigation: sessionStorage.getItem('external_navigation'),
                    navigation_source: sessionStorage.getItem('navigation_source')
                }
            };
        }
    };
    
    console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–∫–ª—é—á–µ–Ω');
    console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: consultationDebug.openModal(), consultationDebug.testNavigation()');
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º
document.addEventListener('DOMContentLoaded', function() {
    const contactsBtn = document.getElementById('contactsNavigationBtn');
    
    if (contactsBtn) {
        console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º');
        
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        contactsBtn.removeAttribute('onclick');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        contactsBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            console.log('üéØ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ö–Ω–æ–ø–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –Ω–∞–∂–∞—Ç–∞ - —É–ª—É—á—à–µ–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è');
            
            // –í—ã–∑—ã–≤–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            if (typeof navigateToContacts === 'function') {
                navigateToContacts(e);
            } else {
                console.warn('‚ö†Ô∏è –ò–°–ü–†–ê–í–õ–ï–ù–û: —Ñ—É–Ω–∫—Ü–∏—è navigateToContacts –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
                
                sessionStorage.setItem('navigate_to', 'contacts');
                sessionStorage.setItem('external_navigation', 'true');
                window.location.href = 'index.html#contacts';
            }
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –ø—Ä–∏ –∫–ª–∏–∫–µ
        contactsBtn.addEventListener('click', function() {
            this.style.transform = 'scale(0.95)';
            this.style.transition = 'transform 0.1s ease';
            
            setTimeout(() => {
                this.style.transform = 'scale(1)';
            }, 100);
        });
        
        console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ª—É—á—à–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    } else {
        console.error('‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–û: –ö–Ω–æ–ø–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–≤–∞–ª
    setTimeout(() => {
        const btn = document.getElementById('contactsNavigationBtn');
        if (btn && !btn.hasAttribute('data-enhanced')) {
            btn.setAttribute('data-enhanced', 'true');
            console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∏–º–µ–Ω–µ–Ω —É–ª—É—á—à–µ–Ω–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç –∫ –∫–Ω–æ–ø–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤');
        }
    }, 500);
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
window.testContactsNavigation = function() {
    console.log('üß™ –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º...');
    const btn = document.getElementById('contactsNavigationBtn');
    if (btn) {
        btn.click();
    } else {
        console.error('‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–û: –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    }
};

console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–≥—Ä—É–∂–µ–Ω–∞');